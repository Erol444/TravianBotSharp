name: PreReleaseFlow

on:
  pull_request:
    branches: develop
    types: closed
  workflow_dispatch:
    
jobs:
  version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semvers.outputs.patch }}
      changelog: ${{ steps.Changelog.outputs.changelog }}
    steps:
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: pre-release
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Checkout repo' 
        uses: actions/checkout@v2      
      
      - name: 'Update tag'
        run: git fetch --prune --unshallow --tags

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        
      - name: 'Get next version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}  
            
      - name: 'Create changelog'
        id: Changelog
        run: |
          changelog=$(git log --no-merges --pretty=format:'- %s' ${{ steps.previoustag.outputs.tag }}..HEAD --reverse)
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$changelog"

  build:
    runs-on: windows-latest
    needs: version
    steps:
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      - uses: actions/checkout@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Get cache
        uses: actions/cache@v2
        with:
          path: |
              packages
              TbsCore/obj/project.assets.json
              TbsCore/TbsCore.csproj.nuget.g.targets
              TbsCore/TbsCore.csproj.nuget.g.props.              
          key: ${{ runner.os }}-nuget-${{ hashFiles('TbsCore/packages.lock.json') }}
          restore-keys: |
              ${{ runner.os }}-nuget-

      - name: Restore Packages
        run: |
          nuget restore TbsCore/TbsCore.csproj -PackagesDirectory packages
          nuget restore TravBotSharp/TbsWinForms.csproj -PackagesDirectory packages

      - name: Build Bot
        run: |
          msbuild.exe TravBotSharp.sln /t:TbsWinForms /nologo /nr:false /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /m /p:BuildProjectReferences=true /p:BUILD_NUMBER=${{needs.version.outputs.version}}.0

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: TBS-prerelease
          path: TravBotSharp\bin\Release
          if-no-files-found: error

  prerelease:
    runs-on: ubuntu-latest
    needs: [build, version]
    steps:    
        
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: TBS-prerelease
          path: TravBotSharp/bin/Release
      
      - name: Archive pre release
        uses: montudor/action-zip@v1
        with:
            args: zip -qq -r TBS-${{needs.version.outputs.version}}.zip TravBotSharp/bin/Release

      - name: Create pre release
        uses: ncipollo/release-action@v1
        with:
          name: TBS-${{needs.version.outputs.version}}-pre
          prerelease: true
          tag: ${{needs.version.outputs.version}}
          commit: develop
          body: |
            **Changelog**: 
            ${{needs.version.outputs.changelog}}
      
          artifacts: TBS-${{needs.version.outputs.version}}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  Discord:
    runs-on: ubuntu-latest
    needs: [prerelease, version]
    steps: 
      - name: Send to discord server
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_PRE_BOT }}
          title: New pre-release
          nodetail: true          
          description: |
              Version `TBS-${{needs.version.outputs.version}}`
              Click [here](https://github.com/Erol444/TravianBotSharp/releases/tag/${{needs.version.outputs.version}}) to download!
              
              **Changelog**:
              ${{needs.version.outputs.changelog}}
  Clear:
    runs-on: ubuntu-latest
    needs: prerelease
    steps:
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: TBS-prerelease

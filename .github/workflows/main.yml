# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      #setup-msbuild
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Create Build Directory
        run: mkdir _build
      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          path: packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('TbsCore/packages.lock.json') }}

      - name: Restore Packages
        run: nuget restore TravBotSharp.sln

      - name: Build Solution
        run: |
          msbuild.exe TravBotSharp.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build" /m
      
      - name: Get version
        run: |
          $version = Get-Content ./version.txt -Raw
          $version = [string]::join("",($version.Split("`n")))
          echo "${version}"
          echo "VERSION=${version}"
          echo "VERSION=${version}" >> $GITHUB_ENV
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: TBS-${{ env.VERSION }}
          path: TravBotSharp\bin
          if-no-files-found: error

      - name: Send to Discord Server
        run: |
            curl -X POST -H "Content-Type: application/json" -d '{\"content\":\"@here We have another build for you guys\n Check <#750744155239743548>\",\"embeds\":[{\"title\":\"Download TBS-${{ env.VERSION }}\",\"url\":\"https://nightly.link/Erol444/TravianBotSharp/workflows/main/master/TBS-${{ env.VERSION }}.zip\"}]}' ${{ secrets.DISCORD_BOT }}
      
      

# This is a basic workflow to help you get started with Actions

name: CI-develop

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
    
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      #setup-msbuild
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
      
      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Restore Packages
        run: |
          nuget restore TbsCore/TbsCore.csproj
          nuget restore TravBotSharp/TbsWinForms.csproj -PackagesDirectory packages
          
      - name: Build Bot
        run: |
          msbuild.exe TravBotSharp.sln /t:TbsWinForms /nologo /nr:false  /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /m /p:BuildProjectReferences=true
      - name: Fix 
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild\DisableOutOfProcBuild.exe"
      - name: Build Installer
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\devenv.com" TravianBotSharp\TravianBotSharp.vdproj /Build "Release|Any CPU"
      
      - name: Get version
        run: |
          $version = (Get-Command TravBotSharp\bin\Release\TravBotSharp.exe).FileVersionInfo.FileVersion
          Write-Output "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: TBS-${{ env.VERSION }}-pre
          path: TravianBotSharp\Release
          if-no-files-found: error

      - name: Send to Discord Server
        run: |
            curl -X POST -H "Content-Type: application/json" -d '{\"content\":\"We have another pre-build for you guys\",\"embeds\":[{\"title\":\"Download TBS-${{ env.VERSION }}-pre\",\"url\":\"https://nightly.link/Erol444/TravianBotSharp/workflows/main/master/TBS-${{ env.VERSION }}-pre.zip\"}]}' ${{ secrets.DISCORD_BOT }}
      
      

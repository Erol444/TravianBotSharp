name: ReleaseFlow

on:
  pull_request:
    branches: [master]
    types: [closed]
  workflow_dispatch:

jobs:
  version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semvers.outputs.minor }}
      changelog: ${{ steps.Changelog.outputs.changelog }}
    steps:
      - uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: release
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 'Checkout repo' 
        uses: actions/checkout@v2    

      - name: 'Update tag'
        run: git fetch --prune --unshallow --tags

      - name: 'Get latest tag'
        id: latesttag
        uses: pozetroninc/github-action-get-latest-release@master        
        with:
          repository: ${{ github.repository }}
        
      - name: 'Get next version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.latesttag.outputs.release }}
            
      - name: 'Create changelog'
        id: Changelog
        run: |
          changelog="${{github.event.pull_request.body}}"
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$changelog"
  build:
    runs-on: windows-2019
    needs: version
    strategy:
      matrix:
        server: [TRAVIAN_OFFICIAL, TRAVIAN_OFFICIAL_HEROUI, TTWARS]
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
            dotnet-version: 6.0.x
      
      - name: 'Checkout repo' 
        uses: actions/checkout@v2

      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Build Bot
        run: dotnet publish WPFUI -c Release --self-contained true -p:PublishSingleFile=true -r win-x86 -p:Server=${{ matrix.server }} -p:AssemblyVersion=${{needs.version.outputs.version}}.0

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: TBS-${{ matrix.server }}
          path: WPFUI\bin\Release\net6.0-windows\win-x86\publish\
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [build, version]
    steps:        
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: TBS
      
      - name: Archive pre release
        run: |
            zip -r "TBS-${{needs.version.outputs.version}}-TravianOfficial.zip" TBS/TBS-TRAVIAN_OFFICIAL
            zip -r "TBS-${{needs.version.outputs.version}}-TravianOfficial-NewHeroUI.zip" TBS/TBS-TRAVIAN_OFFICIAL_HEROUI
            zip -r "TBS-${{needs.version.outputs.version}}-TTWars.zip" TBS/TBS-TTWARS
            
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: TBS-${{needs.version.outputs.version}}
          tag: ${{needs.version.outputs.version}}
          commit: master          
          artifacts: "TBS-${{needs.version.outputs.version}}-TravianOfficial.zip, TBS-${{needs.version.outputs.version}}-TravianOfficial-NewHeroUI.zip, TBS-${{needs.version.outputs.version}}-TTWars.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            **Changelog**: 
            ${{needs.version.outputs.changelog}}
  Discord:
    runs-on: ubuntu-latest
    needs: [release, version]
    steps:
      - name: Ping @everyone
        run: |
          curl --header "Content-Type: application/json" --data "{\"content\": \"@everyone\"}" "${{ secrets.DISCORD_BOT }}"
      - name: Send to discord server
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_BOT }}
          title: New release
          nodetail: true
          description: |
              Version `TBS-${{needs.version.outputs.version}}`
              Click [here](https://github.com/Erol444/TravianBotSharp/releases/tag/${{needs.version.outputs.version}}) to download!
              
              **Changelog**:
              ${{needs.version.outputs.changelog}}
  Clear:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: TBS-release
